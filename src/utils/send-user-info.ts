import {prisma} from '@/prisma/prisma.client'
import {totalDays} from '@/utils/total-days'
import {Scenes} from 'telegraf'
import {SceneContext, WizardContext} from 'telegraf/typings/scenes'
import {generateUrlForUser} from './generate-user-url'

export const sendUserInfo = async (
	userName: string,
	ctx: WizardContext<Scenes.WizardSessionData> | SceneContext
) => {
	const user = await prisma.user.findFirst({
		where: {
			login: userName,
		},
	})

	if (!user) {
		return ctx.reply(
			'üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
		)
	}
	let totalTransferAmount: number = 0

	const diffInDays = totalDays(user.createdAt)
	const userUrl = generateUrlForUser(user.login!)
	return ctx.reply(
		`üë§ | –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ <a href="${userUrl}">${user.login}</a>\n\n<b>–õ–æ–≥–∏–Ω:</b> ${user.login}\n<b>BTC –†–µ–π—Ç–∏–Ω–≥: </b> üî∏ (0)\n<b>–î–Ω–µ–π –≤ —Å–µ—Ä–≤–∏—Å–µ:</b> ${diffInDays}`,
		{
			parse_mode: 'HTML',
		}
	)
}
