import { prisma } from '@/prisma/prisma.client'
import { Scenes } from 'telegraf'
import { WizardContext } from 'telegraf/typings/scenes'

export const ChangeFee = new Scenes.WizardScene<WizardContext>(
	'change-fee',
	async ctx => {
		await ctx.reply(
			'–£–∫–∞–∂–∏—Ç–µ % –∫–æ–º–∏—Å—Å–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
		)
		return ctx.wizard.next()
	},
	async ctx => {
		try {
			const fee = parseFloat(ctx.text!)
			const config = await prisma.config.findFirst()
			await prisma.config.update({
				where: {
					id: config?.id,
				},
				data: {
					feeForTransaction: fee,
				},
			})
			await ctx.reply(
				`‚úÖ <b>–ö–æ–º–∏—Å—Å–∏—è —É—Å–ø–µ—à–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!</b>\n\n–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∫–æ–º–∏—Å—Å–∏—é ${fee}% –∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`,
				{ parse_mode: 'HTML' }
			)
			return ctx.scene.leave()
		} catch {
			ctx.reply('üö´ –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.')
			return ctx.scene.leave()
		}
	}
)
