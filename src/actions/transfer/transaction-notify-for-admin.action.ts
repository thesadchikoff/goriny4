import {BotContext} from "@/@types/scenes";
import adminNotifyModule from "@/core/admin/admin-notify.module";
import {bot} from "@/config/bot";
import userService from "@/db/user.service";

export const transactionNotifyForAdminAction = async (ctx: BotContext) => {
    const user = await userService.fetchOneById({
        id: ctx.from!.id
    })
    const recipientAddress = ctx.session.transfer?.recipientAddress
    const countBTC = ctx.session.transfer?.countBTC
    await bot.telegram.sendMessage(ctx.from!.id, '<b>–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º</b>\n\n–ö–∞–∫ —Ç–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –ø—Ä–∏–º—É—Ç —Ä–µ—à–µ–Ω–∏–µ, –≤—ã –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', {
        parse_mode: 'HTML'
    })
    return adminNotifyModule.sendNotify(`<b>–ü–æ–ø—ã—Ç–∫–∞ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤</b>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${user!.username} —Ö–æ—á–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ <b>${countBTC} BTC</b> –Ω–∞ –∫–æ—à–µ–ª–µ–∫ <code>${recipientAddress}</code>`, [[
        {
            callback_data: 'confirm',
            text: 'üü¢ –û–¥–æ–±—Ä–∏—Ç—å'
        },
        {
            callback_data: 'reject',
            text: 'üî¥ –û—Ç–∫–ª–æ–Ω–∏—Ç—å'
        }
    ]])
}