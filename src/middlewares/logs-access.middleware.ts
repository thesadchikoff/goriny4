import { Context, Middleware } from 'telegraf';
import { logInfo } from '@/core/logs/logger';
import { prisma } from '@/prisma/prisma.client';
import { Update } from 'telegraf/typings/core/types/typegram';

/**
 * Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–∞–Ω–¥–∞–º –ª–æ–≥–æ–≤
 * –†–∞–∑—Ä–µ—à–∞–µ—Ç –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
 */
export const logsAccessMiddleware = (): Middleware<Context<Update>> => {
  // –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –ª–æ–≥–æ–≤
  const LOG_COMMANDS = ['/getlogs', '/getlog', '/getlogslist', '/getlogsgroup', '/cleanuplogs'];
  
  return async (ctx, next) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π –ª–æ–≥–æ–≤
    if (ctx.message && 'text' in ctx.message && LOG_COMMANDS.includes(ctx.message.text.split(' ')[0])) {
      logInfo(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –ª–æ–≥–∞–º: ${ctx.message.text}`, {
        userId: ctx.from?.id,
        username: ctx.from?.username
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
      const user = await prisma.user.findFirst({
        where: {
          id: String(ctx.from?.id)
        }
      });
      
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø
      if (user && user.isAdmin) {
        logInfo(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [ID: ${ctx.from?.id} | USERNAME: ${ctx.from?.username}] –∑–∞–ø—Ä–æ—Å–∏–ª –ª–æ–≥–∏`, {
          userId: ctx.from?.id,
          command: ctx.message.text
        });
        
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
        return next();
      }
      
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –æ—Ç–∫–∞–∑—ã–≤–∞–µ–º –≤ –¥–æ—Å—Ç—É–ø–µ
      await ctx.reply('üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
      return; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–µ–ø–æ—á–∫—É middleware
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ –ª–æ–≥–æ–≤, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
    return next();
  };
}; 