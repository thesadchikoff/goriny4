import { prisma } from '@/prisma/prisma.client'

import { totalDays } from '@/utils/total-days'
import {SceneContext, WizardContext} from 'telegraf/typings/scenes'
import cuid = require('cuid')
import {Scenes} from "telegraf";
import {sendUserInfo} from "@/utils/send-user-info";
const isValidLogin = (text: string) => {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å '/user_' –∏ –¥–∞–ª–µ–µ –∏–¥–µ—Ç –Ω–∞–±–æ—Ä –∏–∑ 8 –±—É–∫–≤ (–∑–∞–≥–ª–∞–≤–Ω—ã—Ö –∏–ª–∏ —Å—Ç—Ä–æ—á–Ω—ã—Ö) –∏–ª–∏ —Ü–∏—Ñ—Ä
	const regex = /^\/user_[A-Z0-9a-z]{8}$/;
	return regex.test(text);
};



export const getUserInfo = async (ctx: WizardContext<Scenes.WizardSessionData>) => {
	// @ts-ignore
	const messageText = ctx.message.text
	try {
		if (isValidLogin(messageText)) {
			console.log(2)
			const userCuid = messageText.slice(1)
			await sendUserInfo(userCuid, ctx)
		} else {
			return
		}
	} catch (error) {
		console.log(error)
		return ctx.reply(
			'üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
		)
	}
}
