import { Context } from "telegraf";
import { BotContext } from "@/@types/scenes";
import userService from "@/db/user.service";
import currencyService from "@/service/currency.service";
import { currencyFormatter } from "@/utils/currency-formatter";
import { dateFormat } from "@/utils/format-date";
import { Stage } from "@/index";

/**
 * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const profileCommand = () => {
    Stage.command(['profile', 'me'], async (ctx) => {
        try {
            // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const userId = ctx.from?.id.toString();
            if (!userId) {
                return ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à ID. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
            const loadingMsg = await ctx.reply('‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ...');
            
            // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const profile = await userService.fetchOneById({ id: userId });
            
            if (!profile) {
                await ctx.telegram.editMessageText(
                    ctx.chat?.id,
                    loadingMsg.message_id,
                    undefined,
                    '‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start'
                );
                return;
            }
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ—à–µ–ª—å–∫–∞
            const hasWallet = profile.wallet !== null;
            
            // –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å BTC –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—É–º–º –≤ –≤–∞–ª—é—Ç–µ
            let btcRate: any = null;
            try {
                const currency = await currencyService.getCurrency('bitcoin');
                btcRate = currency?.bitcoin;
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ BTC:', error);
            }
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Ñ–∏–ª–µ
            let messageText = `üì± <b>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n`;
            
            // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            messageText += `üë§ <b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n`;
            messageText += `‚Ä¢ –ò–º—è: <b>${profile.username}</b>\n`;
            messageText += `‚Ä¢ –õ–æ–≥–∏–Ω: <b>${profile.login || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}</b>\n`;
            messageText += `‚Ä¢ ID: <code>${profile.id}</code>\n`;
            messageText += `‚Ä¢ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: <b>${dateFormat(profile.createdAt)}</b>\n`;
            
            // –°—Ç–∞—Ç—É—Å—ã
            messageText += `\nüö¶ <b>–°—Ç–∞—Ç—É—Å—ã:</b>\n`;
            messageText += `‚Ä¢ ${profile.isAdmin ? '‚úÖ' : '‚ùå'} –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n`;
            messageText += `‚Ä¢ ${profile.isBtcSubscribed ? '‚úÖ' : '‚ùå'} –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫—É—Ä—Å–µ BTC\n`;
            messageText += `‚Ä¢ ${profile.isBlocked ? '‚õîÔ∏è' : '‚úÖ'} –î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ\n`;

            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—à–µ–ª—å–∫–µ
            messageText += `\nüíº <b>–ö–æ—à–µ–ª–µ–∫:</b>\n`;
            
            if (hasWallet && profile.wallet) {
                const wallet = profile.wallet;
                const frozenBalance = parseFloat(wallet.frozenBalance?.toString() || '0') || 0;
                const availableBalance = parseFloat(wallet.balance?.toString() || '0') - frozenBalance;
                
                messageText += `‚Ä¢ –ê–¥—Ä–µ—Å: <code>${wallet.address}</code>\n`;
                messageText += `‚Ä¢ –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: <b>${parseFloat(wallet.balance?.toString() || '0').toFixed(8)} BTC</b>`;
                
                if (btcRate) {
                    const fiatValue = parseFloat(wallet.balance?.toString() || '0') * btcRate.rub;
                    messageText += ` (‚âà${currencyFormatter(fiatValue, 'rub')})\n`;
                } else {
                    messageText += '\n';
                }
                
                // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤–∞—Ö
                messageText += `‚Ä¢ –ó–∞–º–æ—Ä–æ–∂–µ–Ω–æ: <b>${frozenBalance.toFixed(8)} BTC</b>`;
                if (btcRate && frozenBalance > 0) {
                    const frozenFiatValue = frozenBalance * btcRate.rub;
                    messageText += ` (‚âà${currencyFormatter(frozenFiatValue, 'rub')})\n`;
                } else {
                    messageText += '\n';
                }
                
                // –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞
                messageText += `‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ: <b>${availableBalance.toFixed(8)} BTC</b>`;
                if (btcRate) {
                    const availableFiatValue = availableBalance * btcRate.rub;
                    messageText += ` (‚âà${currencyFormatter(availableFiatValue, 'rub')})\n`;
                } else {
                    messageText += '\n';
                }
                
                if (frozenBalance > 0) {
                    messageText += `\nüìù <i>–ó–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –≤–∞—à–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ –ø—Ä–æ–¥–∞–∂—É.</i>\n`;
                }
            } else {
                messageText += `‚Ä¢ <i>–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞.</i>\n`;
                messageText += `‚Ä¢ <i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞.</i>\n`;
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–µ–º–µ–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            messageText += `\nüïí <i>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${dateFormat(new Date())}</i>`;
            
            // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await ctx.telegram.editMessageText(
                ctx.chat?.id, 
                loadingMsg.message_id, 
                undefined, 
                messageText, 
                { 
                    parse_mode: 'HTML',
                    reply_markup: {
                        inline_keyboard: [
                            [
                                { text: 'üí∞ –ö–æ—à–µ–ª–µ–∫', callback_data: 'wallet' },
                                { text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'settings' }
                            ]
                        ]
                    }
                }
            );
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
            return ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    });
}; 